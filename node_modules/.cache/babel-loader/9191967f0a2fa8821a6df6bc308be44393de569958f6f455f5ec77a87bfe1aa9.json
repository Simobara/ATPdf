{"ast":null,"code":"var _jsxFileName = \"/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/PdfViewer/pdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport * as pdfjs from 'pdfjs-dist';\n\n// Se stai utilizzando un bundle locale\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\nconst PdfViewer = ({\n  file,\n  pageNumber,\n  numPages\n}) => {\n  _s();\n  const [localNumPages, setLocalNumPages] = useState(null);\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setLocalNumPages(numPages);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: file,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center text-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" font-extrabold text-3xl\",\n          children: [\"Page \", pageNumber, \" of \", numPages || localNumPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: pageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"qdn2dKRYpW1AEYlp+lyenEGKpzU=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","pdfjsWorker","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","PdfViewer","file","pageNumber","numPages","_s","localNumPages","setLocalNumPages","onDocumentLoadSuccess","children","onLoadSuccess","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/PdfViewer/pdfViewer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport * as pdfjs from 'pdfjs-dist';\n\n// Se stai utilizzando un bundle locale\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nconst PdfViewer = ({ file, pageNumber, numPages }) => {\n    const [localNumPages, setLocalNumPages] = useState(null);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setLocalNumPages(numPages);\n    }\n\n    return (\n        <div>\n            <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\n                <div className=\"flex flex-col items-center text-black\">\n                    <p className=\" font-extrabold text-3xl\">Page {pageNumber} of {numPages || localNumPages}</p>\n                    <div>\n                        <Page pageNumber={pageNumber} />\n                    </div>\n                </div>\n            </Document >\n        </div>\n    );\n}\n\nexport default PdfViewer;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAC1C,OAAO,KAAKC,KAAK,MAAM,YAAY;;AAEnC;AACA,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5DH,KAAK,CAACI,mBAAmB,CAACC,SAAS,GAAGJ,WAAW;AAEjD,MAAMK,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExD,SAASgB,qBAAqBA,CAAC;IAAEJ;EAAS,CAAC,EAAE;IACzCG,gBAAgB,CAACH,QAAQ,CAAC;EAC9B;EAEA,oBACIN,OAAA;IAAAW,QAAA,eACIX,OAAA,CAACL,QAAQ;MAACS,IAAI,EAAEA,IAAK;MAACQ,aAAa,EAAEF,qBAAsB;MAAAC,QAAA,eACvDX,OAAA;QAAKa,SAAS,EAAC,uCAAuC;QAAAF,QAAA,gBAClDX,OAAA;UAAGa,SAAS,EAAC,0BAA0B;UAAAF,QAAA,GAAC,OAAK,EAACN,UAAU,EAAC,MAAI,EAACC,QAAQ,IAAIE,aAAa;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5FjB,OAAA;UAAAW,QAAA,eACIX,OAAA,CAACJ,IAAI;YAACS,UAAU,EAAEA;UAAW;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAAV,EAAA,CAnBKJ,SAAS;AAAAe,EAAA,GAATf,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}