{"ast":null,"code":"var _jsxFileName = \"/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/PdfViewer/pdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\nconst PdfViewer = ({\n  file\n}) => {\n  _s();\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [scale, setScale] = useState(1.5);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    const getText = async () => {\n      const pdf = await pdfjs.getDocument(file).promise;\n      const page = await pdf.getPage(pageNumber);\n      const textContent = await page.getTextContent();\n      const textItems = textContent.items.map(item => item.str);\n      const text = textItems.join('\\n');\n      setText(text);\n    };\n    getText();\n  }, [file, pageNumber]);\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border border-gray-300 p-4 shadow-md overflow-hidden\",\n    style: {\n      maxHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-start text-black pl-8 border-black border-2 overflow-auto\",\n      style: {\n        maxHeight: '90vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: file,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          scale: scale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 bg-black h-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"whitespace-pre-wrap\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"SfMGHn6yxoWoein2oxVXH3d07hI=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","pdfjs","pdfjsWorker","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","PdfViewer","file","_s","numPages","setNumPages","pageNumber","setPageNumber","scale","setScale","text","setText","getText","pdf","getDocument","promise","page","getPage","textContent","getTextContent","textItems","items","map","item","str","join","onDocumentLoadSuccess","className","style","maxHeight","children","onLoadSuccess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/PdfViewer/pdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nconst PdfViewer = ({ file }) => {\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [scale, setScale] = useState(1.5);\n    const [text, setText] = useState(\"\");\n\n    useEffect(() => {\n        const getText = async () => {\n            const pdf = await pdfjs.getDocument(file).promise;\n            const page = await pdf.getPage(pageNumber);\n            const textContent = await page.getTextContent();\n            const textItems = textContent.items.map(item => item.str);\n            const text = textItems.join('\\n');\n            setText(text);\n        };\n\n        getText();\n    }, [file, pageNumber]);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n    }\n\n    return (\n        <div className=\"border border-gray-300 p-4 shadow-md overflow-hidden\" style={{ maxHeight: '100vh' }}>\n\n            {/* ... (parte superiore come prima) ... */}\n\n            <div className=\"flex flex-col items-start text-black pl-8 border-black border-2 overflow-auto\" style={{ maxHeight: '90vh' }}>\n                <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\n                    <Page pageNumber={pageNumber} scale={scale} />\n                </Document>\n            </div>\n\n            {/* Divisoria nera */}\n            <div className=\"my-4 bg-black h-1\"></div>\n\n            {/* Testo trascritto */}\n            <pre className=\"whitespace-pre-wrap\">{text}</pre>\n\n        </div>\n    );\n}\n\nexport default PdfViewer;\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}