{"ast":null,"code":"var _jsxFileName = \"/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/pdfDropZone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfDropZone = () => {\n  _s();\n  const [isNotPdf, setIsNotPdf] = useState(false);\n  const onDrop = useCallback(acceptedFiles => {\n    // Prendi il primo file (in base al tuo output sembra che ci sia solo un file alla volta)\n    const file = acceptedFiles[0];\n    if (file && file.type !== 'application/pdf') {\n      setIsNotPdf(true);\n    } else {\n      setIsNotPdf(false);\n      console.log(file);\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'application/pdf'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: \"min-w-[50rem] border-dashed border-4 border-gray-500 p-10 mt-10 mx-auto w-1/2 h-60 flex flex-col justify-center items-center hover:bg-gray-100 bg-pink-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Trascina il file PDF qui...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Trascina un file PDF qui o fai clic per selezionarlo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), isNotPdf && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-red-600\",\n      children: \"Il file inserito non \\xE8 un PDF. Per favore inserisci un file PDF.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfDropZone, \"cBV6ZAvARh+y2DUfr1sWvXm0wHg=\", false, function () {\n  return [useDropzone];\n});\n_c = PdfDropZone;\nexport default PdfDropZone;\nvar _c;\n$RefreshReg$(_c, \"PdfDropZone\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","PdfDropZone","_s","isNotPdf","setIsNotPdf","onDrop","acceptedFiles","file","type","console","log","getRootProps","getInputProps","isDragActive","accept","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/pdfDropZone.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst PdfDropZone = () => {\n    const [isNotPdf, setIsNotPdf] = useState(false);\n\n    const onDrop = useCallback(acceptedFiles => {\n        // Prendi il primo file (in base al tuo output sembra che ci sia solo un file alla volta)\n        const file = acceptedFiles[0];\n\n        if (file && file.type !== 'application/pdf') {\n            setIsNotPdf(true);\n        } else {\n            setIsNotPdf(false);\n            console.log(file);\n        }\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        accept: 'application/pdf'\n    });\n\n    return (\n        <div className=\"flex flex-col items-center\">\n            <div {...getRootProps()} className=\"min-w-[50rem] border-dashed border-4 border-gray-500 p-10 mt-10 mx-auto w-1/2 h-60 flex flex-col justify-center items-center hover:bg-gray-100 bg-pink-200\">\n                <input {...getInputProps()} />\n                {\n                    isDragActive ?\n                        <p>Trascina il file PDF qui...</p> :\n                        <p>Trascina un file PDF qui o fai clic per selezionarlo.</p>\n                }\n            </div>\n            {isNotPdf && <p className=\"mt-4 text-red-600\">Il file inserito non Ã¨ un PDF. Per favore inserisci un file PDF.</p>}\n        </div>\n    )\n}\n\nexport default PdfDropZone;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMQ,MAAM,GAAGT,WAAW,CAACU,aAAa,IAAI;IACxC;IACA,MAAMC,IAAI,GAAGD,aAAa,CAAC,CAAC,CAAC;IAE7B,IAAIC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,EAAE;MACzCJ,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACHA,WAAW,CAAC,KAAK,CAAC;MAClBK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEI,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGf,WAAW,CAAC;IAC9DO,MAAM;IACNS,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,oBACId,OAAA;IAAKe,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACvChB,OAAA;MAAA,GAASW,YAAY,CAAC,CAAC;MAAEI,SAAS,EAAC,4JAA4J;MAAAC,QAAA,gBAC3LhB,OAAA;QAAA,GAAWY,aAAa,CAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAE1BP,YAAY,gBACRb,OAAA;QAAAgB,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAClCpB,OAAA;QAAAgB,QAAA,EAAG;MAAqD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnE,CAAC,EACLjB,QAAQ,iBAAIH,OAAA;MAAGe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAgE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjH,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAjCKD,WAAW;EAAA,QAeyCH,WAAW;AAAA;AAAAuB,EAAA,GAf/DpB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}