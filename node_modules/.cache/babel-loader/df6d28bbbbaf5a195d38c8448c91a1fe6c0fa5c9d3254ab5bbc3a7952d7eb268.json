{"ast":null,"code":"import { Packer, Document as DocxJS, Paragraph } from 'docx';\nimport { getLogoUp, getLogoDown } from './FParagraphs/0FGets/fGets';\nimport { personaInf, esperienzeLavorativ, istruzioneEFormazion, ulterioriInformazion, competenzeOrganizzativeEGestional, capacitaECompetenzeRelazional, capacitaECompetenzeTecnich, altreCapacit, patent, autorizzazioneDatiPersonal } from './FParagraphs/fParagraphs';\n\n//----------------------------------------------------------------------MAIN\nexport async function createDocument(text) {\n  const lines = text.split('\\n');\n  const allParagraphs = lines.map(line => new Paragraph(line));\n  const originalText = lines.join('\\n');\n\n  // ----------------------------------------------------------------- FUNZIONI RECALL\n  const personaInfo = await personaInf(originalText);\n  const esperienzeLavorative = await esperienzeLavorativ(originalText);\n  const istruzioneEFormazione = await istruzioneEFormazion(originalText);\n  const ulterioriInformazioni = await ulterioriInformazion(originalText);\n  const competenzeOrganizzativeEGestionali = await competenzeOrganizzativeEGestional(originalText);\n  const capacitaECompetenzeRelazionali = await capacitaECompetenzeRelazional(originalText);\n  const capacitaECompetenzeTecniche = await capacitaECompetenzeTecnich(originalText);\n  const altreCapacita = await altreCapacit(originalText);\n  const patenti = await patent(originalText);\n  const autorizzazioneDatiPersonali = await autorizzazioneDatiPersonal(originalText);\n\n  //------------------------------------------------------------------COMPONENTS\n  const logoUp = await getLogoUp();\n  const totParagraphs = [...personaInfo, ...esperienzeLavorative, ...istruzioneEFormazione, ...ulterioriInformazioni, ...competenzeOrganizzativeEGestionali, ...capacitaECompetenzeRelazionali, ...capacitaECompetenzeTecniche, ...altreCapacita, ...patenti, ...autorizzazioneDatiPersonali, new Paragraph(\" \"), ...allParagraphs];\n  const logoDown = await getLogoDown();\n\n  //------------------------------------------------------------------DOC STRUCTURE\n  const doc = new DocxJS({\n    title: 'My Document',\n    creator: 'Me',\n    description: 'Sample document',\n    sections: [{\n      headers: {\n        default: logoUp\n      },\n      children: totParagraphs,\n      footers: {\n        default: logoDown\n      }\n    }]\n  });\n  const blob = await Packer.toBlob(doc);\n  return {\n    blob,\n    originalText\n  };\n}\n//----------------------------------------------------------------------","map":{"version":3,"names":["Packer","Document","DocxJS","Paragraph","getLogoUp","getLogoDown","personaInf","esperienzeLavorativ","istruzioneEFormazion","ulterioriInformazion","competenzeOrganizzativeEGestional","capacitaECompetenzeRelazional","capacitaECompetenzeTecnich","altreCapacit","patent","autorizzazioneDatiPersonal","createDocument","text","lines","split","allParagraphs","map","line","originalText","join","personaInfo","esperienzeLavorative","istruzioneEFormazione","ulterioriInformazioni","competenzeOrganizzativeEGestionali","capacitaECompetenzeRelazionali","capacitaECompetenzeTecniche","altreCapacita","patenti","autorizzazioneDatiPersonali","logoUp","totParagraphs","logoDown","doc","title","creator","description","sections","headers","default","children","footers","blob","toBlob"],"sources":["/Users/momimac/Desktop/ATPdf/src/Components/PdfDropZone/PdfViewer/FCreateDoc/fCreateDocB.jsx"],"sourcesContent":["import { Packer, Document as DocxJS, Paragraph } from 'docx';\nimport { getLogoUp, getLogoDown } from './FParagraphs/0FGets/fGets';\nimport {\n    personaInf,\n    esperienzeLavorativ,\n    istruzioneEFormazion,\n    ulterioriInformazion,\n    competenzeOrganizzativeEGestional,\n    capacitaECompetenzeRelazional,\n    capacitaECompetenzeTecnich,\n    altreCapacit,\n    patent,\n    autorizzazioneDatiPersonal,\n} from './FParagraphs/fParagraphs';\n\n//----------------------------------------------------------------------MAIN\nexport async function createDocument(text) {\n\n    const lines = text.split('\\n');\n    const allParagraphs = lines.map(line => new Paragraph(line));\n    const originalText = lines.join('\\n');\n\n\n    // ----------------------------------------------------------------- FUNZIONI RECALL\n    const personaInfo = await personaInf(originalText);\n    const esperienzeLavorative = await esperienzeLavorativ(originalText);\n    const istruzioneEFormazione = await istruzioneEFormazion(originalText);\n    const ulterioriInformazioni = await ulterioriInformazion(originalText);\n    const competenzeOrganizzativeEGestionali = await competenzeOrganizzativeEGestional(originalText);\n    const capacitaECompetenzeRelazionali = await capacitaECompetenzeRelazional(originalText);\n    const capacitaECompetenzeTecniche = await capacitaECompetenzeTecnich(originalText);\n    const altreCapacita = await altreCapacit(originalText);\n    const patenti = await patent(originalText);\n    const autorizzazioneDatiPersonali = await autorizzazioneDatiPersonal(originalText);\n\n    //------------------------------------------------------------------COMPONENTS\n    const logoUp = await getLogoUp();\n\n    const totParagraphs = [\n        ...personaInfo,\n        ...esperienzeLavorative,\n        ...istruzioneEFormazione,\n        ...ulterioriInformazioni,\n        ...competenzeOrganizzativeEGestionali,\n        ...capacitaECompetenzeRelazionali,\n        ...capacitaECompetenzeTecniche,\n        ...altreCapacita,\n        ...patenti,\n        ...autorizzazioneDatiPersonali,\n        new Paragraph(\" \"),\n        ...allParagraphs\n    ];\n\n    const logoDown = await getLogoDown();\n\n    //------------------------------------------------------------------DOC STRUCTURE\n    const doc = new DocxJS({\n        title: 'My Document',\n        creator: 'Me',\n        description: 'Sample document',\n        sections: [{\n            headers: {\n                default: logoUp,\n            },\n            children: totParagraphs,\n            footers: {\n                default: logoDown,\n            }\n        }]\n    });\n    const blob = await Packer.toBlob(doc);\n    return { blob, originalText };\n}\n//----------------------------------------------------------------------"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,IAAIC,MAAM,EAAEC,SAAS,QAAQ,MAAM;AAC5D,SAASC,SAAS,EAAEC,WAAW,QAAQ,4BAA4B;AACnE,SACIC,UAAU,EACVC,mBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,EACpBC,iCAAiC,EACjCC,6BAA6B,EAC7BC,0BAA0B,EAC1BC,YAAY,EACZC,MAAM,EACNC,0BAA0B,QACvB,2BAA2B;;AAElC;AACA,OAAO,eAAeC,cAAcA,CAACC,IAAI,EAAE;EAEvC,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;EAC9B,MAAMC,aAAa,GAAGF,KAAK,CAACG,GAAG,CAACC,IAAI,IAAI,IAAInB,SAAS,CAACmB,IAAI,CAAC,CAAC;EAC5D,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAI,CAAC,IAAI,CAAC;;EAGrC;EACA,MAAMC,WAAW,GAAG,MAAMnB,UAAU,CAACiB,YAAY,CAAC;EAClD,MAAMG,oBAAoB,GAAG,MAAMnB,mBAAmB,CAACgB,YAAY,CAAC;EACpE,MAAMI,qBAAqB,GAAG,MAAMnB,oBAAoB,CAACe,YAAY,CAAC;EACtE,MAAMK,qBAAqB,GAAG,MAAMnB,oBAAoB,CAACc,YAAY,CAAC;EACtE,MAAMM,kCAAkC,GAAG,MAAMnB,iCAAiC,CAACa,YAAY,CAAC;EAChG,MAAMO,8BAA8B,GAAG,MAAMnB,6BAA6B,CAACY,YAAY,CAAC;EACxF,MAAMQ,2BAA2B,GAAG,MAAMnB,0BAA0B,CAACW,YAAY,CAAC;EAClF,MAAMS,aAAa,GAAG,MAAMnB,YAAY,CAACU,YAAY,CAAC;EACtD,MAAMU,OAAO,GAAG,MAAMnB,MAAM,CAACS,YAAY,CAAC;EAC1C,MAAMW,2BAA2B,GAAG,MAAMnB,0BAA0B,CAACQ,YAAY,CAAC;;EAElF;EACA,MAAMY,MAAM,GAAG,MAAM/B,SAAS,CAAC,CAAC;EAEhC,MAAMgC,aAAa,GAAG,CAClB,GAAGX,WAAW,EACd,GAAGC,oBAAoB,EACvB,GAAGC,qBAAqB,EACxB,GAAGC,qBAAqB,EACxB,GAAGC,kCAAkC,EACrC,GAAGC,8BAA8B,EACjC,GAAGC,2BAA2B,EAC9B,GAAGC,aAAa,EAChB,GAAGC,OAAO,EACV,GAAGC,2BAA2B,EAC9B,IAAI/B,SAAS,CAAC,GAAG,CAAC,EAClB,GAAGiB,aAAa,CACnB;EAED,MAAMiB,QAAQ,GAAG,MAAMhC,WAAW,CAAC,CAAC;;EAEpC;EACA,MAAMiC,GAAG,GAAG,IAAIpC,MAAM,CAAC;IACnBqC,KAAK,EAAE,aAAa;IACpBC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE,iBAAiB;IAC9BC,QAAQ,EAAE,CAAC;MACPC,OAAO,EAAE;QACLC,OAAO,EAAET;MACb,CAAC;MACDU,QAAQ,EAAET,aAAa;MACvBU,OAAO,EAAE;QACLF,OAAO,EAAEP;MACb;IACJ,CAAC;EACL,CAAC,CAAC;EACF,MAAMU,IAAI,GAAG,MAAM/C,MAAM,CAACgD,MAAM,CAACV,GAAG,CAAC;EACrC,OAAO;IAAES,IAAI;IAAExB;EAAa,CAAC;AACjC;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}