{"ast":null,"code":"var _jsxFileName = \"/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/pdfDropZone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport PdfViewer from './PdfViewer/pdfViewer';\nimport ImmagineCurva from \"../../Assets/ImmagineCurvaRoma.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PdfDropZone = () => {\n  _s();\n  const [isPdf, setIsPdf] = useState(false);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n  const onDrop = useCallback(acceptedFiles => {\n    // Prendi il primo file\n    const file = acceptedFiles[0];\n    if (file && file.type !== 'application/pdf') {\n      setIsPdf(true);\n      setFileUploaded(false);\n    } else {\n      setIsPdf(false);\n      setFileUploaded(true);\n      setSelectedPdf(file);\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'application/pdf'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: \"min-w-[50rem] border-dashed border-4 border-gray-500 p-10 mt-10 h-60 flex flex-col justify-start items-center hover:bg-gray-100\",\n        style: {\n          backgroundImage: `url(${ImmagineCurva})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" text-3xl font-bold \",\n          children: \"Trascina il file PDF qui...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-3xl font-bold \",\n          children: \"MAGICA MANU ... Trascina un file In curva SUD.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), isPdf && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-red-600\",\n        children: \"Il file inserito NON E' un PDF. Per favore inserisci un file PDF.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }, this), fileUploaded && !isPdf && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-green-600\",\n        children: \"File pdf caricato correttamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-[50rem] overflow-hidden border-red-700 border- rounded-3xl p-4\",\n        children: selectedPdf && /*#__PURE__*/_jsxDEV(PdfViewer, {\n          file: selectedPdf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PdfDropZone, \"8jJ14POJBLv+Cu/IDqfoClRkyUY=\", false, function () {\n  return [useDropzone];\n});\n_c = PdfDropZone;\nexport default PdfDropZone;\nvar _c;\n$RefreshReg$(_c, \"PdfDropZone\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","PdfViewer","ImmagineCurva","jsxDEV","_jsxDEV","Fragment","_Fragment","PdfDropZone","_s","isPdf","setIsPdf","fileUploaded","setFileUploaded","selectedPdf","setSelectedPdf","onDrop","acceptedFiles","file","type","getRootProps","getInputProps","isDragActive","accept","children","className","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/pdfDropZone.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport PdfViewer from './PdfViewer/pdfViewer';\n\nimport ImmagineCurva from \"../../Assets/ImmagineCurvaRoma.png\"\n\nconst PdfDropZone = () => {\n    const [isPdf, setIsPdf] = useState(false);\n    const [fileUploaded, setFileUploaded] = useState(false);\n    const [selectedPdf, setSelectedPdf] = useState(null);\n\n    const onDrop = useCallback(acceptedFiles => {\n        // Prendi il primo file\n        const file = acceptedFiles[0];\n\n        if (file && file.type !== 'application/pdf') {\n            setIsPdf(true);\n            setFileUploaded(false);\n        } else {\n            setIsPdf(false);\n            setFileUploaded(true);\n            setSelectedPdf(file);\n        }\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        accept: 'application/pdf'\n    });\n\n    return (\n        <>\n            <div className=\"flex flex-col items-center relative\">\n                <div\n                    {...getRootProps()}\n                    className=\"min-w-[50rem] border-dashed border-4 border-gray-500 p-10 mt-10 h-60 flex flex-col justify-start items-center hover:bg-gray-100\"\n                    style={{ backgroundImage: `url(${ImmagineCurva})` }}\n                >\n                    <input {...getInputProps()} />\n                    {\n                        isDragActive ?\n                            <p className=\" text-3xl font-bold \">Trascina il file PDF qui...</p> :\n                            <p className=\"text-white text-3xl font-bold \" >MAGICA MANU ... Trascina un file In curva SUD.</p>\n                    }\n                </div>\n                {isPdf && <p className=\"mt-4 text-red-600\">Il file inserito NON E' un PDF. Per favore inserisci un file PDF.</p>}\n                {fileUploaded && !isPdf && <p className=\"mt-4 text-green-600\">File pdf caricato correttamente</p>}\n                <div className=\"max-h-[50rem] overflow-hidden border-red-700 border- rounded-3xl p-4\">\n                    {selectedPdf && <PdfViewer file={selectedPdf} />}\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default PdfDropZone;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}