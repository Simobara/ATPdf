{"ast":null,"code":"var _jsxFileName = \"/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/PdfViewer/pdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport * as pdfjs from 'pdfjs-dist';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { Packer, Document as DocxJS, Paragraph } from 'docx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\nconst PdfViewer = ({\n  file\n}) => {\n  _s();\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [scale, setScale] = useState(1.5);\n  const [wordBlob, setWordBlob] = useState(\"\");\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n  }\n\n  // Crea un documento Word con il contenuto estratto dal PDF\n  const generateDocx = async () => {\n    const doc = new DocxJS();\n    doc.addSection({\n      children: [new Paragraph(\"Test Paragraph\")]\n    });\n    const blob = await Packer.toBlob(doc);\n    setWordBlob(blob);\n  };\n\n  // Supponendo che tu abbia una funzione per estrarre il testo dal PDF...\n  const extractTextFromPdf = async pdfFile => {\n    // Implementa la logica per estrarre il testo dal PDF...\n    const text = \"Estratto dal tuo PDF...\"; // Questo è un esempio, sostituiscilo con il tuo codice\n    generateDocx(text);\n  };\n  useEffect(() => {\n    if (file) {\n      extractTextFromPdf(file);\n    }\n    // eslint-disable-next-line\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border border-gray-300 p-4 shadow-md overflow-hidden\",\n    style: {\n      maxHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4 sticky top-0 z-10 bg-white p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white px-4 py-2 m-2\",\n          onClick: () => setScale(prevScale => prevScale + 0.1),\n          children: \"Zoom In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white px-4 py-2 m-2\",\n          onClick: () => setScale(prevScale => Math.max(prevScale - 0.1, 0.5)),\n          children: \"Zoom Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-extrabold text-3xl\",\n        children: [\"Page \", pageNumber, \" of \", numPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 text-white px-4 py-2 m-2 disabled:opacity-50\",\n          onClick: () => setPageNumber(prevPageNumber => Math.max(prevPageNumber - 1, 1)),\n          disabled: pageNumber <= 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 text-white px-4 py-2 m-2 disabled:opacity-50\",\n          onClick: () => setPageNumber(prevPageNumber => Math.min(prevPageNumber + 1, numPages)),\n          disabled: pageNumber >= numPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-start text-black pl-8 border-black border-2 overflow-auto\",\n      style: {\n        maxHeight: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: file,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          scale: scale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 bg-black h-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), wordBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: URL.createObjectURL(wordBlob),\n        download: \"documento.docx\",\n        children: \"Vuoi scaricare il file in formato Word?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"44OSAG50UL1ag5PpjwgJx7elJGw=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","pdfjs","pdfjsWorker","Packer","DocxJS","Paragraph","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","PdfViewer","file","_s","numPages","setNumPages","pageNumber","setPageNumber","scale","setScale","wordBlob","setWordBlob","onDocumentLoadSuccess","generateDocx","doc","addSection","children","blob","toBlob","extractTextFromPdf","pdfFile","text","className","style","maxHeight","onClick","prevScale","fileName","_jsxFileName","lineNumber","columnNumber","Math","max","prevPageNumber","disabled","min","onLoadSuccess","href","URL","createObjectURL","download","_c","$RefreshReg$"],"sources":["/Users/momimac/Desktop/pdf-upload-and-extract/src/Components/PdfDropZone/PdfViewer/pdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport * as pdfjs from 'pdfjs-dist';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { Packer, Document as DocxJS, Paragraph } from 'docx';\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nconst PdfViewer = ({ file }) => {\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [scale, setScale] = useState(1.5);\n    const [wordBlob, setWordBlob] = useState(\"\");\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n    }\n\n    // Crea un documento Word con il contenuto estratto dal PDF\n    const generateDocx = async () => {\n        const doc = new DocxJS();\n        doc.addSection({\n            children: [new Paragraph(\"Test Paragraph\")],\n        });\n\n        const blob = await Packer.toBlob(doc);\n        setWordBlob(blob);\n    };\n\n    // Supponendo che tu abbia una funzione per estrarre il testo dal PDF...\n    const extractTextFromPdf = async (pdfFile) => {\n        // Implementa la logica per estrarre il testo dal PDF...\n        const text = \"Estratto dal tuo PDF...\"; // Questo è un esempio, sostituiscilo con il tuo codice\n        generateDocx(text);\n    };\n\n    useEffect(() => {\n        if (file) {\n            extractTextFromPdf(file);\n        }\n        // eslint-disable-next-line\n    }, [file]);\n\n    return (\n        <div className=\"border border-gray-300 p-4 shadow-md overflow-hidden\" style={{ maxHeight: '100vh' }}>\n\n            <div className=\"flex items-center justify-between mb-4 sticky top-0 z-10 bg-white p-2\">\n                <div>\n                    <button\n                        className=\"bg-blue-500 text-white px-4 py-2 m-2\"\n                        onClick={() => setScale(prevScale => prevScale + 0.1)}\n                    >\n                        Zoom In\n                    </button>\n                    <button\n                        className=\"bg-blue-500 text-white px-4 py-2 m-2\"\n                        onClick={() => setScale(prevScale => Math.max(prevScale - 0.1, 0.5))}\n                    >\n                        Zoom Out\n                    </button>\n                </div>\n\n                <p className=\"font-extrabold text-3xl\">Page {pageNumber} of {numPages}</p>\n\n                <div>\n                    <button\n                        className=\"bg-red-500 text-white px-4 py-2 m-2 disabled:opacity-50\"\n                        onClick={() => setPageNumber(prevPageNumber => Math.max(prevPageNumber - 1, 1))}\n                        disabled={pageNumber <= 1}\n                    >\n                        Previous\n                    </button>\n                    <button\n                        className=\"bg-red-500 text-white px-4 py-2 m-2 disabled:opacity-50\"\n                        onClick={() => setPageNumber(prevPageNumber => Math.min(prevPageNumber + 1, numPages))}\n                        disabled={pageNumber >= numPages}\n                    >\n                        Next\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"flex flex-col items-start text-black pl-8 border-black border-2 overflow-auto\" style={{ maxHeight: '50vh' }}>\n                <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\n                    <Page pageNumber={pageNumber} scale={scale} />\n                </Document>\n            </div>\n\n            {/* Divisoria nera */}\n            <div className=\"my-4 bg-black h-1\"></div>\n\n            {wordBlob && (\n                <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow\">\n                    <a href={URL.createObjectURL(wordBlob)} download=\"documento.docx\">\n                        Vuoi scaricare il file in formato Word?\n                    </a>\n                </button>\n            )}\n\n            {/* si puo inserire il testo elaborato o qualsiasi altro contenuto. */}\n\n        </div>\n    );\n}\n\nexport default PdfViewer;\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}